/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bonus as PrismaBonus } from "@prisma/client";

export class BonusServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BonusCountArgs, "select">): Promise<number> {
    return this.prisma.bonus.count(args);
  }

  async bonuses(args: Prisma.BonusFindManyArgs): Promise<PrismaBonus[]> {
    return this.prisma.bonus.findMany(args);
  }
  async bonus(args: Prisma.BonusFindUniqueArgs): Promise<PrismaBonus | null> {
    return this.prisma.bonus.findUnique(args);
  }
  async createBonus(args: Prisma.BonusCreateArgs): Promise<PrismaBonus> {
    return this.prisma.bonus.create(args);
  }
  async updateBonus(args: Prisma.BonusUpdateArgs): Promise<PrismaBonus> {
    return this.prisma.bonus.update(args);
  }
  async deleteBonus(args: Prisma.BonusDeleteArgs): Promise<PrismaBonus> {
    return this.prisma.bonus.delete(args);
  }
}
